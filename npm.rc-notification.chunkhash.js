(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{291:function(e,t,n){"use strict";n.r(t);var o=n(257),a=n.n(o),r=n(256),i=n.n(r),s=n(64),c=n.n(s),l=n(252),u=n.n(l),p=n(255),m=n.n(p),f=n(253),d=n.n(f),y=n(254),C=n.n(y),h=n(0),v=n.n(h),k=n(6),T=n.n(k),N=n(12),b=n.n(N),g=n(259),x=n(355),E=n(1),_=n.n(E),w=function(e){function t(){var e,n,o,a;u()(this,t);for(var r=arguments.length,i=Array(r),s=0;s<r;s++)i[s]=arguments[s];return n=o=d()(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),o.close=function(e){e&&e.stopPropagation(),o.clearCloseTimer(),o.props.onClose()},o.startCloseTimer=function(){o.props.duration&&(o.closeTimer=setTimeout(function(){o.close()},1e3*o.props.duration))},o.clearCloseTimer=function(){o.closeTimer&&(clearTimeout(o.closeTimer),o.closeTimer=null)},a=n,d()(o,a)}return C()(t,e),m()(t,[{key:"componentDidMount",value:function(){this.startCloseTimer()}},{key:"componentDidUpdate",value:function(e){(this.props.duration!==e.duration||this.props.update)&&this.restartCloseTimer()}},{key:"componentWillUnmount",value:function(){this.clearCloseTimer()}},{key:"restartCloseTimer",value:function(){this.clearCloseTimer(),this.startCloseTimer()}},{key:"render",value:function(){var e,t=this.props,n=t.prefixCls+"-notice",o=(e={},i()(e,""+n,1),i()(e,n+"-closable",t.closable),i()(e,t.className,!!t.className),e);return v.a.createElement("div",{className:_()(o),style:t.style,onMouseEnter:this.clearCloseTimer,onMouseLeave:this.startCloseTimer,onClick:t.onClick},v.a.createElement("div",{className:n+"-content"},t.children),t.closable?v.a.createElement("a",{tabIndex:"0",onClick:this.close,className:n+"-close"},t.closeIcon||v.a.createElement("span",{className:n+"-close-x"})):null)}}]),t}(h.Component);w.propTypes={duration:T.a.number,onClose:T.a.func,children:T.a.any,update:T.a.bool,closeIcon:T.a.node},w.defaultProps={onEnd:function(){},onClose:function(){},duration:1.5,style:{right:"50%"}};var I=w,O=0,j=Date.now();var K=function(e){function t(){var e,n,o,a;u()(this,t);for(var r=arguments.length,i=Array(r),s=0;s<r;s++)i[s]=arguments[s];return n=o=d()(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(i))),o.state={notices:[]},o.add=function(e){var t=e.key=e.key||"rcNotification_"+j+"_"+O++,n=o.props.maxCount;o.setState(function(o){var a=o.notices,r=a.map(function(e){return e.key}).indexOf(t),i=a.concat();return-1!==r?i.splice(r,1,e):(n&&a.length>=n&&(e.updateKey=i[0].updateKey||i[0].key,i.shift()),i.push(e)),{notices:i}})},o.remove=function(e){o.setState(function(t){return{notices:t.notices.filter(function(t){return t.key!==e})}})},a=n,d()(o,a)}return C()(t,e),m()(t,[{key:"getTransitionName",value:function(){var e=this.props,t=e.transitionName;return!t&&e.animation&&(t=e.prefixCls+"-"+e.animation),t}},{key:"render",value:function(){var e,t=this,n=this.props,o=this.state.notices,a=o.map(function(e,a){var r=Boolean(a===o.length-1&&e.updateKey),i=e.updateKey?e.updateKey:e.key,s=Object(x.a)(t.remove.bind(t,e.key),e.onClose);return v.a.createElement(I,c()({prefixCls:n.prefixCls},e,{key:i,update:r,onClose:s,onClick:e.onClick,closeIcon:n.closeIcon}),e.content)}),r=(e={},i()(e,n.prefixCls,1),i()(e,n.className,!!n.className),e);return v.a.createElement("div",{className:_()(r),style:n.style},v.a.createElement(g.default,{transitionName:this.getTransitionName()},a))}}]),t}(h.Component);K.propTypes={prefixCls:T.a.string,transitionName:T.a.string,animation:T.a.oneOfType([T.a.string,T.a.object]),style:T.a.object,maxCount:T.a.number,closeIcon:T.a.node},K.defaultProps={prefixCls:"rc-notification",animation:"fade",style:{top:65,left:"50%"}},K.newInstance=function(e,t){var n=e||{},o=n.getContainer,r=a()(n,["getContainer"]),i=document.createElement("div");o?o().appendChild(i):document.body.appendChild(i);var s=!1;b.a.render(v.a.createElement(K,c()({},r,{ref:function(e){s||(s=!0,t({notice:function(t){e.add(t)},removeNotice:function(t){e.remove(t)},component:e,destroy:function(){b.a.unmountComponentAtNode(i),i.parentNode.removeChild(i)}}))}})),i)};var P=K;t.default=P}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,